[General]
init-hook='import sys; sys.path.append("/data/jenkins/home/jobs/p2ptracker/workspace/.env/lib/python2.5/site-packages");' 
# Disabled messages:
# W0613: Unused argument %r Used when a function or method argument is not used.
# W0622: Redefining built-in %r Used when a variable or function override a built-in.
# W0232: Class has no __init__ method Used when a class has no __init__ method, neither 
#        its parent classes.
# W0142: Used * or * magic* Used when a function or method is called using *args or **kwargs
#        to dispatch arguments. This doesn't improve readility and should be used with care.
# W0102: Dangerous default value %s as argument Used when a mutable value as list or dictionary 
#        is detected in a default value for an argument.
# W0212: Access to a protected member %s of a client class Used when a protected member 
#        (i.e. class member with a name beginning with an underscore) is access outside the class 
#        or a descendant of the class where it's defined.
# R0201: Method could be a function. Used when a method doesn't use its bound instance, and so 
#        could be written as a function.
# R0801: Similar lines in %s files. Indicates that a set of similar lines has been detected 
#        among multiple file. This usually means that the code should be refactored to avoid this
#        duplication.
# C0302: Too many lines in module (%s) Used when a module has too much lines, reducing 
#        its readibility.
# W0602: Using global for %r but no assigment is done Used when a variable is defined through 
#        the "global" statement but no assigment to this variable is done.
# W0603: Using the global statement Used when you use the "global" statement to update 
#        a global variable. PyLint just try to discourage this usage. That doesn't mean 
#        you can not use it !
# W0704: Except doesn't do anything Used when an except clause does nothing but "pass" 
#        and there is no "else" clause.
# I0011: Locally disabling %s Used when an inline option disable a message or a messages category.
# C0103: Invalid variable names
disable-msg=W0613,W0622,W0232,W0142,W0102,W0212,R0201,R0801,C0302,W0602,W0603,W0704,I0011,C0103

# checks for :
# * doc strings
# * modules / classes / functions / methods / arguments / variables name
# * number of arguments, local variables, branchs, returns and statements in
# functions, methods
# * required module attributes
# * dangerous default values as arguments
# * redefinition of function / method / class
# * uses of the global statement
# 
[BASIC]

# Required attributes for module, separated by a comma
required-attributes=

# Regular expression which should only match functions or classes name which do
# not require a docstring
no-docstring-rgx=__.*__

# Regular expression which should only match correct module names
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# Regular expression which should only match correct module level names
const-rgx=(([A-Z_][A-Z1-9_]*)|(__.*__)|([a-z_][a-z0-9_]*))$

# Regular expression which should only match correct class names
class-rgx=[a-zA-Z0-9]+$

# Regular expression which should only match correct function names
function-rgx=[a-z_][a-zA-Z0-9_]{2,40}$

# Regular expression which should only match correct method names
method-rgx=[a-z_][a-zA-Z0-9_]{2,40}$

# Regular expression which should only match correct instance attribute names
attr-rgx=[a-z_][a-z0-9_]{1,30}$
#alternative
#attr-rgx=([a-z_][a-z0-9_]{2,30}|([a-z_][a-zA-Z0-9]{2,30}))$

# Regular expression which should only match correct argument names
argument-rgx=[a-z_][a-z0-9_]{1,30}$

# Regular expression which should only match correct variable names
variable-rgx=[a-z_][a-zA-Z0-9_]{1,30}$

# Regular expression which should only match correct list comprehension /
# generator expression variable names
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

# Good variable names which should always be accepted, separated by a comma
good-names=f,i,j,k,ex,_

# Bad variable names which should always be refused, separated by a comma
bad-names=foo,bar,baz,toto,tutu,tata

# List of builtins function names that should not be used, separated by a comma
bad-functions=map,filter,apply,input
